trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ROCKSDBVNUM=`cat rocksdbversion`
      echo "##vso[task.setvariable variable=ROCKSDBVERSION]v${ROCKSDBVNUM}"
    workingDirectory: '$(Build.SourcesDirectory)'

- task: NuGetToolInstaller@0

- task: DotNetCoreInstaller@0
  displayName: 'Install .net core 3.0'
  inputs:
    version: '3.1.100'

- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    projects: '$(Build.SourcesDirectory)/build-codegen/CSharpGen.csproj'
    workingDirectory: '$(Build.SourcesDirectory)/build-codegen/'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/csharp/RocksDbSharp.csproj'
    workingDirectory: '$(Build.SourcesDirectory)/csharp/'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/csharp/RocksDbSharp.csproj'
    configuration: 'Release'
    versioningScheme: 'off'
    buildProperties: 'Version="$(ROCKSDBVERSION).$(build.buildId)";AllowUnsafeBlocks="True";LangVersion="latest"'

# - task: NuGetCommand@2
#   inputs:
#     command: 'push'
#     packagesToPush: '**/*.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'nuget-curiosity'
